import DownloadEventEmitter, { DownloadEvents } from '../events/DownloadEventEmitter.js';
export interface DownloadCommandQueueOptions {
    concurrency: number;
    timeout?: number;
    autoStart: boolean;
}
export interface DownloadCommandOptions {
    queue: DownloadCommandQueueOptions;
    filename: string;
    extension: string;
}
declare class DownloadCommand {
    private directoryPath;
    private emitter;
    private queue;
    private processes;
    private readonly options;
    constructor(directoryPath: string, options?: Partial<DownloadCommandOptions>);
    add(url: string): void;
    start(): void;
    pause(): void;
    terminate(url?: string): void;
    clear(): void;
    on<E extends keyof DownloadEvents>(event: E, callback: DownloadEvents[E]): DownloadEventEmitter;
    emit<E extends keyof DownloadEvents>(event: E, ...args: Parameters<DownloadEvents[E]>): boolean;
    setDirectoryPath(directoryPath: string): void;
    getDirectoryPath(): string;
    private runTask;
}
export default DownloadCommand;
